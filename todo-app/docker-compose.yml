version: '3.8'

services:
  # todo-frontend
  front:
    image: todo-frontend
    build:
      context: ./todo-frontend # The context will pick this directory as the "build context"
      dockerfile: Dockerfile # This will simply tell which dockerfile to read
    volumes:
      - ./todo-frontend/:/usr/src/app #:/usr/src/app/todo-frontend-dev # The path can be relative, so ./ is enough to say "the same location as the docker-compose.yml"
    container_name: todo-frontend-prod # This will name the container
    environment:
      - REACT_APP_BACKEND_URL http://localhost:3000/api
      - PORT 3000
  # todo-backend
  back:
    image: todo-backend 
    build:
      context: ./todo-backend
      dockerfile: Dockerfile
    volumes:
      - ./todo-backend/:/usr/src/app #:/usr/src/app/todo-backend-dev
    environment:
      - REDIS_URL redis://redis:6379
      - MONGO_URL mongodb://the_username:the_password@mongo:3456/the_database
      - PORT 3001
    container_name: todo-backend-prod
  
  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 3000:80
    container_name: reverse-proxy
    depends_on:
      - front # wait for the frontend container to be started
      - back

  redis:
    image: redis
    command: ["redis-server", "--appendonly", "yes"]
    volumes: # Declare the volume
      - ./todo-backend/redis_data:/data
  
  mongo:
    image: mongo
    ports:
      - 3456:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes: 
      - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - ./todo-backend/mongo_data:/data/db
